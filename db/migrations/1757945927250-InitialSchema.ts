import { MigrationInterface, QueryRunner } from "typeorm";

export class  InitialSchema1757945927250 implements MigrationInterface {
    name = ' InitialSchema1757945927250'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "githubagent"."auth_providers_provider_enum" AS ENUM('google', 'github')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."auth_providers" ("auth_provider_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "provider" "githubagent"."auth_providers_provider_enum" NOT NULL, "provider_account_id" character varying(255) NOT NULL, "access_token_encrypted" text, "refresh_token_encrypted" text, "scope" text, "expires_at" TIMESTAMP, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "user_id" uuid, CONSTRAINT "PK_ef03bdd80497e3951e2e5faedb6" PRIMARY KEY ("auth_provider_id"))`);
        await queryRunner.query(`CREATE TYPE "githubagent"."review_findings_category_enum" AS ENUM('positive', 'issue', 'suggestion', 'future_bug')`);
        await queryRunner.query(`CREATE TYPE "githubagent"."review_findings_severity_enum" AS ENUM('low', 'medium', 'high')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."review_findings" ("review_finding_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "category" "githubagent"."review_findings_category_enum" NOT NULL, "file_path" character varying(500), "line_number" integer, "severity" "githubagent"."review_findings_severity_enum", "description" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "pr_review_id" uuid, CONSTRAINT "PK_0eba2aa8d0c99533d48a960845b" PRIMARY KEY ("review_finding_id"))`);
        await queryRunner.query(`CREATE TYPE "githubagent"."chat_messages_sender_enum" AS ENUM('user', 'ai')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."chat_messages" ("chat_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "sender" "githubagent"."chat_messages_sender_enum" NOT NULL, "content" jsonb NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "pr_review_id" uuid, CONSTRAINT "PK_9f5c0b96255734666b7b4bc98c3" PRIMARY KEY ("chat_id"))`);
        await queryRunner.query(`CREATE TYPE "githubagent"."pr_files_change_type_enum" AS ENUM('added', 'modified', 'deleted', 'renamed')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_files" ("pr_file_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "file_path" character varying(500) NOT NULL, "previous_file_path" character varying(500), "change_type" "githubagent"."pr_files_change_type_enum" NOT NULL, "additions" integer NOT NULL DEFAULT '0', "deletions" integer NOT NULL DEFAULT '0', "patch" text, "file_language" character varying(100), "file_size_bytes" integer, "blob_sha" character varying(40), "raw_url" text, "contents_url" text, "patch_size_bytes" integer, "is_binary" boolean NOT NULL DEFAULT false, "analysis_notes" jsonb, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "pr_review_id" uuid, "pr_metadata_id" uuid, CONSTRAINT "PK_452ef490c1edc37c65b230d8b1c" PRIMARY KEY ("pr_file_id"))`);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_commits" ("pr_commit_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "commit_sha" character varying(40) NOT NULL, "message" text NOT NULL, "author" character varying(255) NOT NULL, "author_email" character varying(255) NOT NULL, "committed_at" TIMESTAMP NOT NULL, "parent_sha" character varying(40), "commit_url" character varying(500), "additions" integer NOT NULL DEFAULT '0', "deletions" integer NOT NULL DEFAULT '0', "tree_sha" character varying(40), "verified" boolean NOT NULL DEFAULT false, "verification_reason" character varying(255), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "pr_review_id" uuid, "pr_metadata_id" uuid, "github_author_id" uuid, CONSTRAINT "UQ_1cec6297b98120a1e15e037ae74" UNIQUE ("commit_sha"), CONSTRAINT "PK_8ae5bdd65ac8f96bf1d1bbda31a" PRIMARY KEY ("pr_commit_id"))`);
        await queryRunner.query(`CREATE TYPE "githubagent"."pr_reviews_status_enum" AS ENUM('pending', 'completed', 'failed')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_reviews" ("pr_review_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "pr_url" character varying NOT NULL, "status" "githubagent"."pr_reviews_status_enum" NOT NULL, "files_changed" integer NOT NULL, "additions" integer NOT NULL, "deletions" integer NOT NULL, "summary" text NOT NULL, "analysis_version" character varying(50), "analysis_config" jsonb, "analysis_started_at" TIMESTAMP, "analysis_completed_at" TIMESTAMP, "total_findings" integer NOT NULL DEFAULT '0', "high_severity_count" integer NOT NULL DEFAULT '0', "medium_severity_count" integer NOT NULL DEFAULT '0', "low_severity_count" integer NOT NULL DEFAULT '0', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "user_id" uuid, "repository_id" uuid, "pr_metadata_id" uuid, CONSTRAINT "UQ_5417e0252e49d26709adb342a9d" UNIQUE ("pr_url"), CONSTRAINT "PK_0296f0e7acb79a4679e0f402e47" PRIMARY KEY ("pr_review_id"))`);
        await queryRunner.query(`CREATE TABLE "githubagent"."repositories" ("repository_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "repository_name" character varying(255) NOT NULL, "repository_owner" character varying(255) NOT NULL, "repository_url" character varying(500) NOT NULL, "github_repo_id" integer NOT NULL, "default_branch" character varying(255) NOT NULL DEFAULT 'main', "is_private" boolean NOT NULL DEFAULT false, "is_fork" boolean NOT NULL DEFAULT false, "is_archived" boolean NOT NULL DEFAULT false, "last_synced_at" TIMESTAMP, "topics" jsonb, "homepage" text, "size" integer, "languages" jsonb, "metadata" jsonb, "description" text NOT NULL, "stars" integer NOT NULL, "forks" integer NOT NULL, "watchers" integer NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_fb1084b08c39a6c6fb51b254718" UNIQUE ("repository_url"), CONSTRAINT "UQ_1737947e7f09f3968cb93720f67" UNIQUE ("github_repo_id"), CONSTRAINT "PK_9175aaa2fdb3a4272a2153ef335" PRIMARY KEY ("repository_id"))`);
        await queryRunner.query(`CREATE TYPE "githubagent"."github_pr_reviews_state_enum" AS ENUM('APPROVED', 'CHANGES_REQUESTED', 'COMMENTED', 'DISMISSED', 'PENDING')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."github_pr_reviews" ("github_pr_review_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "github_review_id" integer NOT NULL, "body" text, "state" "githubagent"."github_pr_reviews_state_enum" NOT NULL, "submitted_at" TIMESTAMP, "commit_sha" character varying(40), "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "pr_metadata_id" uuid, "reviewer_github_user_id" uuid, CONSTRAINT "UQ_2275c60a7e592d4885ec080f84f" UNIQUE ("github_review_id"), CONSTRAINT "UQ_2275c60a7e592d4885ec080f84f" UNIQUE ("github_review_id"), CONSTRAINT "PK_9d137855119750439e81a525a70" PRIMARY KEY ("github_pr_review_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_04520f2d166c5dbce0f9c48e96" ON "githubagent"."github_pr_reviews" ("submitted_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_389433020146378b6e23309420" ON "githubagent"."github_pr_reviews" ("state") `);
        await queryRunner.query(`CREATE INDEX "IDX_2275c60a7e592d4885ec080f84" ON "githubagent"."github_pr_reviews" ("github_review_id") `);
        await queryRunner.query(`CREATE TYPE "githubagent"."pr_comments_side_enum" AS ENUM('LEFT', 'RIGHT')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_comments" ("pr_comment_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "github_comment_id" integer NOT NULL, "body" text NOT NULL, "path" character varying(500), "line" integer, "side" "githubagent"."pr_comments_side_enum", "in_reply_to_id" integer, "github_created_at" TIMESTAMP NOT NULL, "github_updated_at" TIMESTAMP NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "pr_metadata_id" uuid, "author_github_user_id" uuid, CONSTRAINT "UQ_f9a5a8d3646e8a0d58d2bdc50a5" UNIQUE ("github_comment_id"), CONSTRAINT "UQ_f9a5a8d3646e8a0d58d2bdc50a5" UNIQUE ("github_comment_id"), CONSTRAINT "PK_5a893ece69747e84b1f84505a3a" PRIMARY KEY ("pr_comment_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_2c1468d1f28c1e4aab66785395" ON "githubagent"."pr_comments" ("github_created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_f9379953c2ceccaccd58a3185f" ON "githubagent"."pr_comments" ("line") `);
        await queryRunner.query(`CREATE INDEX "IDX_29bffc1040705354d6d10af16a" ON "githubagent"."pr_comments" ("path") `);
        await queryRunner.query(`CREATE INDEX "IDX_f9a5a8d3646e8a0d58d2bdc50a" ON "githubagent"."pr_comments" ("github_comment_id") `);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_labels" ("pr_label_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying(255) NOT NULL, "color" character varying(6) NOT NULL, "description" text, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "repository_id" uuid, CONSTRAINT "UQ_4423788fa0abecab958e3d63501" UNIQUE ("repository_id", "name"), CONSTRAINT "PK_b3e3bbb0a37fdfa4c9d486bd3cc" PRIMARY KEY ("pr_label_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_34cad5caf72a3f21dc4ef7aa36" ON "githubagent"."pr_labels" ("color") `);
        await queryRunner.query(`CREATE INDEX "IDX_2ef5d7c19487ccb28064691e28" ON "githubagent"."pr_labels" ("name") `);
        await queryRunner.query(`CREATE TYPE "githubagent"."pr_metadata_state_enum" AS ENUM('open', 'closed', 'merged')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_metadata" ("pr_metadata_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "github_pr_id" integer NOT NULL, "pr_number" integer NOT NULL, "title" character varying(500) NOT NULL, "body" text, "state" "githubagent"."pr_metadata_state_enum" NOT NULL, "draft" boolean NOT NULL DEFAULT false, "mergeable" boolean, "merged_at" TIMESTAMP, "closed_at" TIMESTAMP, "base_ref" character varying(255) NOT NULL, "base_sha" character varying(40) NOT NULL, "head_ref" character varying(255) NOT NULL, "head_sha" character varying(40) NOT NULL, "github_created_at" TIMESTAMP NOT NULL, "github_updated_at" TIMESTAMP NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "repository_id" uuid, "author_github_user_id" uuid, CONSTRAINT "UQ_f16fd40e5a05c7997269923deb9" UNIQUE ("repository_id", "pr_number"), CONSTRAINT "PK_89c96db6e1a7a0a3a82393fa5d5" PRIMARY KEY ("pr_metadata_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_09b80fefc6ebde84a0dd381a20" ON "githubagent"."pr_metadata" ("github_created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_5e23962cf688444fc6f27e2960" ON "githubagent"."pr_metadata" ("merged_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_0e8e64a1fecf50a92df1a1804b" ON "githubagent"."pr_metadata" ("state") `);
        await queryRunner.query(`CREATE INDEX "IDX_9ae97dc08fd4af47603b9ab24f" ON "githubagent"."pr_metadata" ("pr_number") `);
        await queryRunner.query(`CREATE INDEX "IDX_7655d3e8b05e9f4f127df0006d" ON "githubagent"."pr_metadata" ("github_pr_id") `);
        await queryRunner.query(`CREATE TABLE "githubagent"."github_users" ("github_user_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "github_id" integer NOT NULL, "login" character varying(255) NOT NULL, "avatar_url" text, "name" character varying(255), "email" character varying(255), "company" character varying(255), "bio" text, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "user_id" uuid, CONSTRAINT "UQ_fcb2858c19c84091f544628555f" UNIQUE ("github_id"), CONSTRAINT "UQ_08b04f3a5eb20458f07a602ffba" UNIQUE ("login"), CONSTRAINT "UQ_08b04f3a5eb20458f07a602ffba" UNIQUE ("login"), CONSTRAINT "UQ_fcb2858c19c84091f544628555f" UNIQUE ("github_id"), CONSTRAINT "PK_86f6af7ed8f73a8be9d4881dc58" PRIMARY KEY ("github_user_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_08b04f3a5eb20458f07a602ffb" ON "githubagent"."github_users" ("login") `);
        await queryRunner.query(`CREATE INDEX "IDX_fcb2858c19c84091f544628555" ON "githubagent"."github_users" ("github_id") `);
        await queryRunner.query(`CREATE TABLE "githubagent"."users" ("user_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "f_name" character varying(255), "l_name" character varying(255), "email" character varying(255) NOT NULL, "email_verified" boolean NOT NULL DEFAULT false, "avatar_url" text, "phone" character varying(255), "password" character varying(255), "refresh_token" text, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_96aac72f1574b88752e9fb00089" PRIMARY KEY ("user_id"))`);
        await queryRunner.query(`CREATE TYPE "githubagent"."user_sessions_status_enum" AS ENUM('active', 'expired', 'revoked')`);
        await queryRunner.query(`CREATE TABLE "githubagent"."user_sessions" ("user_session_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "session_token" character varying(255) NOT NULL, "expires_at" TIMESTAMP NOT NULL, "status" "githubagent"."user_sessions_status_enum" NOT NULL DEFAULT 'active', "ip_address" character varying(45), "user_agent" text, "device_fingerprint" character varying(100), "location" character varying(100), "last_activity_at" TIMESTAMP, "session_data" jsonb, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "user_id" uuid, CONSTRAINT "UQ_e5eb7a3c7766f941fe16b9edecb" UNIQUE ("session_token"), CONSTRAINT "PK_8f2ba43c7728251e8cc63bc1d1d" PRIMARY KEY ("user_session_id"))`);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_assignees" ("pr_metadata_id" uuid NOT NULL, "github_user_id" uuid NOT NULL, "assigned_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_bd036fc30e2c0238736f7b99b63" PRIMARY KEY ("pr_metadata_id", "github_user_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_1664fffebb5b686ed4bc707ada" ON "githubagent"."pr_assignees" ("github_user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_d3269dda0b328304cca4052494" ON "githubagent"."pr_assignees" ("pr_metadata_id") `);
        await queryRunner.query(`CREATE TABLE "githubagent"."pr_metadata_labels" ("pr_metadata_id" uuid NOT NULL, "pr_label_id" uuid NOT NULL, CONSTRAINT "PK_078b0ca97d1d046a8c234622a3a" PRIMARY KEY ("pr_metadata_id", "pr_label_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_0db7a309dce5cc99ac8a8f8d6b" ON "githubagent"."pr_metadata_labels" ("pr_metadata_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_bd464a31afd6acc562a3414190" ON "githubagent"."pr_metadata_labels" ("pr_label_id") `);
        await queryRunner.query(`ALTER TABLE "githubagent"."auth_providers" ADD CONSTRAINT "FK_262996fd08ab5a69e85b53d0055" FOREIGN KEY ("user_id") REFERENCES "githubagent"."users"("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."review_findings" ADD CONSTRAINT "FK_9c22b3559e772d415bcdecd5a63" FOREIGN KEY ("pr_review_id") REFERENCES "githubagent"."pr_reviews"("pr_review_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."chat_messages" ADD CONSTRAINT "FK_dbda1a146c3d74433ed90923f66" FOREIGN KEY ("pr_review_id") REFERENCES "githubagent"."pr_reviews"("pr_review_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_files" ADD CONSTRAINT "FK_78a829ba8f68507cbef73f0dcb2" FOREIGN KEY ("pr_review_id") REFERENCES "githubagent"."pr_reviews"("pr_review_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_files" ADD CONSTRAINT "FK_842f18de8f81f9d2b398124636a" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_commits" ADD CONSTRAINT "FK_b2919fc7c2dc1d0e97118d04bbd" FOREIGN KEY ("pr_review_id") REFERENCES "githubagent"."pr_reviews"("pr_review_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_commits" ADD CONSTRAINT "FK_c317ee05ae3039284cf176f27b2" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_commits" ADD CONSTRAINT "FK_167774f0f67a6f885718f80093c" FOREIGN KEY ("github_author_id") REFERENCES "githubagent"."github_users"("github_user_id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_reviews" ADD CONSTRAINT "FK_b6052a618c0088a44ebb1e872bb" FOREIGN KEY ("user_id") REFERENCES "githubagent"."users"("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_reviews" ADD CONSTRAINT "FK_fd0720a92c5b00f47fa21c7fa4e" FOREIGN KEY ("repository_id") REFERENCES "githubagent"."repositories"("repository_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_reviews" ADD CONSTRAINT "FK_0b05702c1b178d5d4a2285a5f20" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."github_pr_reviews" ADD CONSTRAINT "FK_d088afa5fe4d9e6f0e8b485b5d2" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."github_pr_reviews" ADD CONSTRAINT "FK_76c39709c205e5645292e53265d" FOREIGN KEY ("reviewer_github_user_id") REFERENCES "githubagent"."github_users"("github_user_id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_comments" ADD CONSTRAINT "FK_7ee89591d213b73bbd6df84fec3" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_comments" ADD CONSTRAINT "FK_002c98bbda6e33d8c95679bb66e" FOREIGN KEY ("author_github_user_id") REFERENCES "githubagent"."github_users"("github_user_id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_labels" ADD CONSTRAINT "FK_f498d925534077a7649367e0920" FOREIGN KEY ("repository_id") REFERENCES "githubagent"."repositories"("repository_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata" ADD CONSTRAINT "FK_8d0bd179d00dd666e81ca4bb404" FOREIGN KEY ("repository_id") REFERENCES "githubagent"."repositories"("repository_id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata" ADD CONSTRAINT "FK_7db9acfc5c25e72033f12b9f0a7" FOREIGN KEY ("author_github_user_id") REFERENCES "githubagent"."github_users"("github_user_id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."github_users" ADD CONSTRAINT "FK_63042bba786e37c3e68606e7414" FOREIGN KEY ("user_id") REFERENCES "githubagent"."users"("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."user_sessions" ADD CONSTRAINT "FK_e9658e959c490b0a634dfc54783" FOREIGN KEY ("user_id") REFERENCES "githubagent"."users"("user_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_assignees" ADD CONSTRAINT "FK_d3269dda0b328304cca40524948" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_assignees" ADD CONSTRAINT "FK_1664fffebb5b686ed4bc707ada2" FOREIGN KEY ("github_user_id") REFERENCES "githubagent"."github_users"("github_user_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata_labels" ADD CONSTRAINT "FK_0db7a309dce5cc99ac8a8f8d6b3" FOREIGN KEY ("pr_metadata_id") REFERENCES "githubagent"."pr_metadata"("pr_metadata_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata_labels" ADD CONSTRAINT "FK_bd464a31afd6acc562a34141905" FOREIGN KEY ("pr_label_id") REFERENCES "githubagent"."pr_labels"("pr_label_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata_labels" DROP CONSTRAINT "FK_bd464a31afd6acc562a34141905"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata_labels" DROP CONSTRAINT "FK_0db7a309dce5cc99ac8a8f8d6b3"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_assignees" DROP CONSTRAINT "FK_1664fffebb5b686ed4bc707ada2"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_assignees" DROP CONSTRAINT "FK_d3269dda0b328304cca40524948"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."user_sessions" DROP CONSTRAINT "FK_e9658e959c490b0a634dfc54783"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."github_users" DROP CONSTRAINT "FK_63042bba786e37c3e68606e7414"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata" DROP CONSTRAINT "FK_7db9acfc5c25e72033f12b9f0a7"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_metadata" DROP CONSTRAINT "FK_8d0bd179d00dd666e81ca4bb404"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_labels" DROP CONSTRAINT "FK_f498d925534077a7649367e0920"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_comments" DROP CONSTRAINT "FK_002c98bbda6e33d8c95679bb66e"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_comments" DROP CONSTRAINT "FK_7ee89591d213b73bbd6df84fec3"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."github_pr_reviews" DROP CONSTRAINT "FK_76c39709c205e5645292e53265d"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."github_pr_reviews" DROP CONSTRAINT "FK_d088afa5fe4d9e6f0e8b485b5d2"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_reviews" DROP CONSTRAINT "FK_0b05702c1b178d5d4a2285a5f20"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_reviews" DROP CONSTRAINT "FK_fd0720a92c5b00f47fa21c7fa4e"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_reviews" DROP CONSTRAINT "FK_b6052a618c0088a44ebb1e872bb"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_commits" DROP CONSTRAINT "FK_167774f0f67a6f885718f80093c"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_commits" DROP CONSTRAINT "FK_c317ee05ae3039284cf176f27b2"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_commits" DROP CONSTRAINT "FK_b2919fc7c2dc1d0e97118d04bbd"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_files" DROP CONSTRAINT "FK_842f18de8f81f9d2b398124636a"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."pr_files" DROP CONSTRAINT "FK_78a829ba8f68507cbef73f0dcb2"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."chat_messages" DROP CONSTRAINT "FK_dbda1a146c3d74433ed90923f66"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."review_findings" DROP CONSTRAINT "FK_9c22b3559e772d415bcdecd5a63"`);
        await queryRunner.query(`ALTER TABLE "githubagent"."auth_providers" DROP CONSTRAINT "FK_262996fd08ab5a69e85b53d0055"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_bd464a31afd6acc562a3414190"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_0db7a309dce5cc99ac8a8f8d6b"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_metadata_labels"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_d3269dda0b328304cca4052494"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_1664fffebb5b686ed4bc707ada"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_assignees"`);
        await queryRunner.query(`DROP TABLE "githubagent"."user_sessions"`);
        await queryRunner.query(`DROP TYPE "githubagent"."user_sessions_status_enum"`);
        await queryRunner.query(`DROP TABLE "githubagent"."users"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_fcb2858c19c84091f544628555"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_08b04f3a5eb20458f07a602ffb"`);
        await queryRunner.query(`DROP TABLE "githubagent"."github_users"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_7655d3e8b05e9f4f127df0006d"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_9ae97dc08fd4af47603b9ab24f"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_0e8e64a1fecf50a92df1a1804b"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_5e23962cf688444fc6f27e2960"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_09b80fefc6ebde84a0dd381a20"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_metadata"`);
        await queryRunner.query(`DROP TYPE "githubagent"."pr_metadata_state_enum"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_2ef5d7c19487ccb28064691e28"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_34cad5caf72a3f21dc4ef7aa36"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_labels"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_f9a5a8d3646e8a0d58d2bdc50a"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_29bffc1040705354d6d10af16a"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_f9379953c2ceccaccd58a3185f"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_2c1468d1f28c1e4aab66785395"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_comments"`);
        await queryRunner.query(`DROP TYPE "githubagent"."pr_comments_side_enum"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_2275c60a7e592d4885ec080f84"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_389433020146378b6e23309420"`);
        await queryRunner.query(`DROP INDEX "githubagent"."IDX_04520f2d166c5dbce0f9c48e96"`);
        await queryRunner.query(`DROP TABLE "githubagent"."github_pr_reviews"`);
        await queryRunner.query(`DROP TYPE "githubagent"."github_pr_reviews_state_enum"`);
        await queryRunner.query(`DROP TABLE "githubagent"."repositories"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_reviews"`);
        await queryRunner.query(`DROP TYPE "githubagent"."pr_reviews_status_enum"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_commits"`);
        await queryRunner.query(`DROP TABLE "githubagent"."pr_files"`);
        await queryRunner.query(`DROP TYPE "githubagent"."pr_files_change_type_enum"`);
        await queryRunner.query(`DROP TABLE "githubagent"."chat_messages"`);
        await queryRunner.query(`DROP TYPE "githubagent"."chat_messages_sender_enum"`);
        await queryRunner.query(`DROP TABLE "githubagent"."review_findings"`);
        await queryRunner.query(`DROP TYPE "githubagent"."review_findings_severity_enum"`);
        await queryRunner.query(`DROP TYPE "githubagent"."review_findings_category_enum"`);
        await queryRunner.query(`DROP TABLE "githubagent"."auth_providers"`);
        await queryRunner.query(`DROP TYPE "githubagent"."auth_providers_provider_enum"`);
    }

}
